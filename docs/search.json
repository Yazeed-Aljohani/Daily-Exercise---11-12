[
  {
    "objectID": "Daily-Exercises-11-12.html#part-1-normality-testing",
    "href": "Daily-Exercises-11-12.html#part-1-normality-testing",
    "title": "Daily exercises 11-12",
    "section": "Part 1: Normality Testing",
    "text": "Part 1: Normality Testing\n\nLoad the airquality dataset in R. What does this dataset represent? Explore its structure using functions like str() and summary().\n\n\ndata(\"airquality\")\nstr(airquality)\n\n'data.frame':   153 obs. of  6 variables:\n $ Ozone  : int  41 36 12 18 NA 28 23 19 8 NA ...\n $ Solar.R: int  190 118 149 313 NA NA 299 99 19 194 ...\n $ Wind   : num  7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ...\n $ Temp   : int  67 72 74 62 56 66 65 59 61 69 ...\n $ Month  : int  5 5 5 5 5 5 5 5 5 5 ...\n $ Day    : int  1 2 3 4 5 6 7 8 9 10 ...\n\nsummary(airquality)\n\n     Ozone           Solar.R           Wind             Temp      \n Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n 1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n 3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n NA's   :37       NA's   :7                                       \n     Month            Day      \n Min.   :5.000   Min.   : 1.0  \n 1st Qu.:6.000   1st Qu.: 8.0  \n Median :7.000   Median :16.0  \n Mean   :6.993   Mean   :15.8  \n 3rd Qu.:8.000   3rd Qu.:23.0  \n Max.   :9.000   Max.   :31.0  \n                               \n\n\nThe airquality dataset consists of 153 observations and 6 variables related to air quality measurements recorded in New York from May to September 1973. The dataset includes daily readings of ozone levels, solar radiation, wind speed, and temperature, along with the corresponding month and day of measurement. it has some missing values in Ozone Solar.R columns. Ozone levels have a median of 31.5 ppb, with high variability. Solar Radiation varies widely, with a median of 205 Langleys. Wind speeds have a relatively small spread (most values between 7.4 and 11.5 mph). Temperature is normally distributed, with a median of 79°F.\n\nPerform a Shapiro-Wilk normality test on the following variables: Ozone, Temp, Solar.R, and Wind.\n\n\n#Shapiro-Wilk Normality Test\nshapiro.test(airquality$Ozone)\n\n\n    Shapiro-Wilk normality test\n\ndata:  airquality$Ozone\nW = 0.87867, p-value = 2.79e-08\n\nshapiro.test(airquality$Temp)\n\n\n    Shapiro-Wilk normality test\n\ndata:  airquality$Temp\nW = 0.97617, p-value = 0.009319\n\nshapiro.test(airquality$Solar.R)\n\n\n    Shapiro-Wilk normality test\n\ndata:  airquality$Solar.R\nW = 0.94183, p-value = 9.492e-06\n\nshapiro.test(airquality$Wind)\n\n\n    Shapiro-Wilk normality test\n\ndata:  airquality$Wind\nW = 0.98575, p-value = 0.1178\n\n\n\nWhat is the purpose of the Shapiro-Wilk test?\nThe Shapiro-Wilk test checks whether a dataset follows a normal distribution.\nWhat are the null and alternative hypotheses for this test?\n\nNull Hypothesis (H₀): The data is normally distributed.\n\n\n\nAlternative Hypothesis (H₁): The data is not normally distributed.\nIf p-value &lt; 0.05, we reject H₀, meaning the data is likely not normally distributed.\nIf p-value ≥ 0.05, we fail to reject H₀, meaning the data may be normally distributed.\n\nInterpret the p-values. Are these variables normally distributed?\n\n\nTest Results Interpretation\n\n\n\n\n\n\n\n\nVariable\nW Statistic\np-value\nNormality Conclusion\n\n\n\n\nOzone\n0.87867\n2.79e-08\nNot Normal (p &lt; 0.05)\n\n\nTemp\n0.97617\n0.009319\nNot Normal (p &lt; 0.05)\n\n\nSolar.R\n0.94183\n9.49e-06\nNot Normal (p &lt; 0.05)\n\n\nWind\n0.98575\n0.1178\nPossibly Normal (p &gt; 0.05)"
  },
  {
    "objectID": "Daily-Exercises-11-12.html#part-2-data-transformation-and-feature-engineering",
    "href": "Daily-Exercises-11-12.html#part-2-data-transformation-and-feature-engineering",
    "title": "Daily exercises 11-12",
    "section": "Part 2: Data Transformation and Feature Engineering",
    "text": "Part 2: Data Transformation and Feature Engineering\n\nCreate a new column with case_when tranlating the Months into four seasons (Winter (Nov, Dec, Jan), Spring (Feb, Mar, Apr), Summer (May, Jun, Jul), and Fall (Aug, Sep, Oct)).\n\n\n# Creating a Season Column\nairquality &lt;- airquality %&gt;%\n  mutate(Season = case_when(\n    Month %in% c(11, 12, 1) ~ \"Winter\",\n    Month %in% c(2, 3, 4) ~ \"Spring\",\n    Month %in% c(5, 6, 7) ~ \"Summer\",\n    Month %in% c(8, 9, 10) ~ \"Fall\"\n  ))\n\n\nUse table to figure out how many observations we have from each season.\n\n# Counting Observations per Season\n\ntable(airquality$Season)\n\n\n  Fall Summer \n    61     92 \n\n\n\nThere are 93 Summer observations and 61 observations during Fall."
  },
  {
    "objectID": "Daily-Exercises-11-12.html#part-3-data-preprocessing",
    "href": "Daily-Exercises-11-12.html#part-3-data-preprocessing",
    "title": "Daily exercises 11-12",
    "section": "Part 3: Data Preprocessing",
    "text": "Part 3: Data Preprocessing\n\nNormalize the predictor variables (Temp, Solar.R, Wind, and Season) using a recipe\n\n# Normalizing Data\nrecipe &lt;- recipe(Ozone ~ Temp + Solar.R + Wind + Season, data = airquality) %&gt;%\n  step_normalize(all_numeric_predictors()) %&gt;%\n  step_impute_mean(all_numeric_predictors()) %&gt;%\n  step_dummy(all_nominal_predictors())\n\nWhat is the purpose of normalizing data?\n\nNormalizing data ensures that all variables contribute equally, preventing large-scale features from dominating models.\n\nWhat function can be used to impute missing values with the mean?\nstep_impute_mean() function.\nprep and bake the data to generate a processed dataset.\n\n# Preparing and Applying Recipe\nprepped_recipe &lt;- prep(recipe, training = airquality)\nnorm_data &lt;- bake(prepped_recipe, new_data = airquality)\nhead(norm_data)\n\n# A tibble: 6 × 5\n    Temp   Solar.R   Wind Ozone Season_Summer\n   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;         &lt;dbl&gt;\n1 -1.15   4.52e- 2 -0.726    41             1\n2 -0.621 -7.54e- 1 -0.556    36             1\n3 -0.410 -4.10e- 1  0.750    12             1\n4 -1.68   1.41e+ 0  0.438    18             1\n5 -2.31  -2.02e-17  1.23     NA             1\n6 -1.26  -2.02e-17  1.40     28             1\n\n\n\nI got: Temp, Solar.R, and Wind are normalized, so their values are now scaled around zero. Ozone is still in its original form, and there’s one missing value (NA). The Season_Summer column is a dummy variable, meaning all these rows are from summer (1).\n\nWhy is it necessary to both prep() and bake() the recipe?\nI would say, prep() is like getting everything ready before cooking. it calculates things like the mean for scaling. bake() is actually applying those transformations to the data, just like cooking the meal."
  },
  {
    "objectID": "Daily-Exercises-11-12.html#part-4-building-a-linear-regression-model",
    "href": "Daily-Exercises-11-12.html#part-4-building-a-linear-regression-model",
    "title": "Daily exercises 11-12",
    "section": "Part 4: Building a Linear Regression Model",
    "text": "Part 4: Building a Linear Regression Model\n\nFit a linear model using Ozone as the response variable and all other variables as predictors. Remeber that the . notation can we used to include all variables.\n\n\nmodel &lt;- lm(Ozone ~ ., data = norm_data)\nsummary(model)\n\n\nCall:\nlm(formula = Ozone ~ ., data = norm_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-39.591 -14.802  -2.437  10.510  99.531 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     39.816      2.970  13.405  &lt; 2e-16 ***\nTemp            16.375      2.477   6.612 1.38e-09 ***\nSolar.R          4.973      2.158   2.305   0.0231 *  \nWind           -10.952      2.282  -4.800 4.98e-06 ***\nSeason_Summer    3.988      4.197   0.950   0.3441    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.33 on 111 degrees of freedom\n  (37 observations deleted due to missingness)\nMultiple R-squared:  0.5964,    Adjusted R-squared:  0.5819 \nF-statistic: 41.01 on 4 and 111 DF,  p-value: &lt; 2.2e-16\n\n\n\nInterpret the model summary output (coefficients, R-squared, p-values) in plain language\n\nThe model shows that temperature significantly increases Ozone levels, while wind reduces them. Solar radiation has a moderate effect, but season (Summer) is not significant. The model explains 60% of the Ozone variation, meaning other factors influence it. 37 rows were removed due to missing values, which could impact accuracy. The F-statistic confirms the model is strong, but large residuals suggest possible outliers. To improve, I may consider handling missing data and checking residual plots for better predictions."
  },
  {
    "objectID": "Daily-Exercises-11-12.html#part-5-model-diagnostics",
    "href": "Daily-Exercises-11-12.html#part-5-model-diagnostics",
    "title": "Daily exercises 11-12",
    "section": "Part 5: Model Diagnostics",
    "text": "Part 5: Model Diagnostics\n\nUse broom::augment to suppliment the normalized data.frame with the fitted values and residuals.\n\n\n# cleaning andExtracting Residuals and Predictions\nclean_data &lt;- na.omit(norm_data)  # Remove missing values first\npredictions &lt;- augment(model, clean_data)\n\n\n\nExtract the residuals and visualize their distribution as a histogram and qqplot.\nUse ggarange to plot this as one image and interpret what you see in them.\n\n### Histogram and QQ-Plot of Residuals\np1 &lt;- gghistogram(predictions, x = \".resid\", fill = \"blue\")\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\np2 &lt;- ggqqplot(predictions$.resid)\nggarrange(p1, p2, ncol = 2, nrow = 1)\n\n\n\n\n\n\n\n\n\nThe residual histogram is right-skewed, suggesting non-normal residuals and potential underprediction in some cases. The Q-Q plot shows deviation in the right tail, indicating outliers or heteroscedasticity. This suggests violations of regression assumptions, possibly affecting accuracy.\n\nCreate a scatter plot of actual vs. predicted values using ggpubr\n\nggscatter(predictions, x = \"Ozone\", y = \".fitted\", \n          add = \"reg.line\", conf.int = TRUE,\n          cor.coef = TRUE, cor.method = \"spearman\",\n          ellipse = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nHow strong of a model do you think this is?\nMy model explains about 60% of the variation in Ozone levels, meaning there’s still 40% unaccounted for. Temperature and Wind strongly impact Ozone, while Solar Radiation has a smaller effect and Season doesn’t matter much. The residuals are skewed, suggesting outliers or assumption violations. To improve it, I could check for outliers, apply log transformations, or add more predictors like humidity. Overall, it’s a decent model but not perfect, I can definitely make it stronger!"
  }
]